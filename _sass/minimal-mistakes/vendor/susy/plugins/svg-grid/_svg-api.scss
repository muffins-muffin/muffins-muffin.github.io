/// 플러그인: SVG Grid Image
/// ======================
/// @group plugin_svg-grid
/// @see susy-svg-grid



/// ## 개요
/// 그리드를 시각화하고 디버깅하는 데 도움이 되는
/// SVG 배경을 생성하려면
/// SVG Grid 플러그인을 임포트하세요.
///
/// 이 플러그인은 전역 기본값에 `svg-grid-colors` 설정을 추가하며,
/// `$susy`에서 이를 재정의할 수 있습니다.
/// 또한 새로운 함수 `susy-svg-grid()`를 제공하여,
/// 배경이나 생성된 콘텐츠에서 사용할
/// 인라인 SVG를 반환합니다.
///
/// 기본적으로 `svg-grid` 임포트를 사용하면
/// 접두사 없는(unprefixed) 별칭이 함께 제공됩니다.
/// API의 접두사 버전만 원한다면,
/// 대신 `svg-grid/prefix` 파셜을 임포트하세요.
///
/// @group plugin_svg-grid
///
/// @example scss - 플러그인 임포트
///   // Susy를 임포트하는 전체 경로는 환경에 따라 달라집니다…
///
///   // 접두사 없음(unprefixed)
///   @import 'plugins/svg-grid';
///
///   // 접두사 있음(prefixed)
///   @import 'plugins/svg-grid/prefix';
///
/// @example scss - 배경 그리드 생성
///   .grid {
///     background: susy-svg-grid() no-repeat scroll;
///   }



// SVG Grid
// --------
/// 그리드를 표시하기 위한 인라인 SVG 데이터를 반환합니다.
///
/// @group plugin_svg-grid
///
/// @param {Map | List} $grid [$susy] -
///   현재 그리드를 정의하는 맵 또는 단축(shorthand)
/// @param {Color | List | null} $colors [null] -
///   컬럼 색상 또는 컬럼 그라디언트를 위한 색상 리스트.
///   전역 `svg-grid-colors` 설정을 덮어쓰는 데 사용됩니다.
/// @param {Length | null} $offset [null] -
///   그리드 가장자리를 고려하여
///   기본 그리드 이미지 오프셋을 수동으로 재정의합니다.
///
/// @return {String} -
///   이미지나 콘텐츠 속성에서 사용할
///   `url(<svg>)` 형식의 CSS 인라인 데이터 SVG 문자열
/// @example scss
///   .grid {
///     background: susy-svg-grid() no-repeat scroll;
///   }
@function susy-svg-grid(
  $grid: $susy,
  $colors: null,
  $offset: null
) {
  // 그리드 파싱 및 정규화
  $grid: susy-compile($grid, $context-only: true);

  // 색상 및 그라디언트 처리
  $gradient: '';

  @if (not $colors) {
    $colors: susy-get('svg-grid-colors');
  }

  @if length($colors) > 1 {
    $gradient: _susy-svg-gradient($colors);
    $colors: 'url(%23susy-svg-gradient)';
  } @else {
    $colors: _susy-svg-color($colors);
  }

  // 기본 이미지 너비 계산
  $span: (
    'span': map-get($grid, 'columns'),
    'spread': map-get($grid, 'container-spread'),
  );
  $span: map-merge($grid, $span);
  $image-width: su-call('su-span', $span);
  $image-width: if((type-of($image-width) == 'number'), $image-width, 100%);

  // SVG 구성
  $columns: map-get($grid, 'columns');
  $offset: $offset or _susy-svg-offset($grid);

  $attrs: 'fill="#{$colors}" width="#{$image-width}"';
  $svg: 'data:image/svg+xml,';
  $svg: $svg + '%3Csvg xmlns="http://www.w3.org/2000/svg" #{$attrs} %3E';
  $svg: $svg + $gradient;

  @for $column from 1 through length($columns) {
    $width: susy-span(1 narrow at $column, $grid);
    $x: _susy-svg-column-position($column, $grid);

    $svg: $svg + _susy-svg-rect($x, $width, $offset);
  }

  @return url('#{$svg}%3C/svg%3E');
}
